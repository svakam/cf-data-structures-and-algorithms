/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package graph;

import java.util.Set;

public class Graph {

    // adds new node to graph, takes in value of node, returns added node
    public GraphNode<Integer> addNode(int value) {
        GraphNode<Integer> newNode = new GraphNode<>(value);
        if (size() == 0) {
            return newNode;
        } else {

        }
    }

    // adds new edge between two nodes in graph, include ability to have weight, take in two nodes to be connected, both nodes already in graph
    public void addEdge(GraphNode<Integer> N1, GraphNode<Integer> N2, Integer weight) {
        Edge<Integer> newEdge = new Edge<>(weight, N2);
        
    }

    // return all nodes in graph as collection
    public Set<GraphNode<Integer>> getNodes() {
        return ;
    }

    // return collection of all nodes connected to given node, including weight of connection in returned collection
    public Set<GraphNode<Integer>> getNeighbors(GraphNode<Integer> existingNode) {
        return ;
    }

    // return total number of nodes in graph
    public int size() {
        return ;
    }
}
